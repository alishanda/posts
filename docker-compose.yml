version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: posts_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - posts_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - RUN_TESTS=false
    env_file:
      - .env

  webserver:
    image: nginx:alpine
    container_name: posts_webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - posts_network

  db:
    image: mysql:8.0
    container_name: posts_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - posts_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:alpine
    container_name: posts_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - posts_network

networks:
  posts_network:
    driver: bridge

volumes:
  db_data:
    driver: local
